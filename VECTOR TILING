SI
- optimalizace - nezrusit getFeaturesByID a pridat jeho odpoved v pripade potreby do getGeometry??
	- snizi se pocet requestu pri ziskavani novych features
	- neziskavat getFeaturesIdinBBOX pri prechodu z vetsiho do mensi priblizeni -> nutnost cachovat IDs pro kazdy extent
		- 

VECTOR TILING
- cache
	- udelat renderovani do cache (couchDB) -> DONE DONE 

- geojson vs topojson

- otestovat variantu jedne geometrie pro vice zoomu - otazka jak to implementovat

- co porovnavat?
	- rychlost kompletniho nacteni
	- velikost prenesenych dat
	->>>> plynulost UI - jak to testovat?????
	- ziskat srovnani jak narocne je v celkovem procesu samotna fce pro spojovani geomnetrii
	- srovnat jak se bude menit vykonost pri zmene parametru pro kritickou velikost rozrezani geometrie
	- srovnat jak se meni vykonost pri zmene velikosti nacitene velikosti okna prohlizece (prednacitani)

- da se nejak merit kolik casu se usetri pokud se neco nebude volat funkce stale dokola?
	- metoda getLODforRes - slo by to asi ziskat jenom jednou

- kouknout na morandiniho srovnani - jestli by se neco z toho nedalo vyuzit 


- poznamky: 
	- spatial indexing nebo spatial index service? nebo nejak jinak?
		- spis asi mluvit o sluzbe
		- bude WFS = spatial index service??? zjistit
	- melo by smysl pro ruzny zoom - mit SI a pro jiny VT
	- kouknout na novinky VT v ol3 asi tam je neco nove pridaneho
	- WFS musi zaznit...a nutne popsat vztah WFS a SI a VT
	- popsat vztah toho co jsem naprogramoval s clankem GAFURRI
	- zminit se o UTFgrid, Mapbox Vector tile format i service, Mapzen vector tile service
	- mapbox - vector tiles ol3
		- zjistit jestli merguji a lze ziskat geometrii nebo samotny feature
	- neslo by nahrat data RUIAN na mapbox vector tiles
	- co je tile.openstreetmap.us je to open source service?
	- kouknout na podmety a revidovat text
	- komentar k foss2015 - o VT http://geothought.blogspot.cz/


Nasledny postup
- predpocitat plochu pro feature
- zkusit udelat cache
	- zkusit implementovat topojson
	
- udelat automatizovane mereni parametru s ukladanim
- vymyslet mechanizmus vyhodnoceni plynulosti UI
- REFACTORING
- priprava pro vice vrstev
- vytvoreni finalni aplikace s vice vrstvami i symbologii
- renderovani relikt pri generalizaci - otestovat globalni algoritmus












REFACTORING AND MULTIPLE LAYERS

Multiple layers
- geojsonFeatureToLayer - vectorSource jako param
- promyslet udelani jedne vrstvy, ktera by nemela data ale fungovala jako jediny loader pro vsechny ostatni vrstvy aplikace
	- jak resit v jakem zoomu je ktera vrstva platna


Topojson
new mergeTools({
	"featureFormat": dodelan topojson format
}); - asi to neomezovat...musi to zvladat ruzne zdroje zaroven



index,js mit jako konfiguracni soubor defacto
- nemelo by v nem byt moc business logiky
- konfiguracni JSON 
	- seznam vrstev s konfigurakem do DB a referenci na ol3 vrstvu
	
- cast prenest do loaderu 
	- mergeTool
	- callback 
	- mergecallback
	- funkcionalitu loadingStatusChange prostrednictvim noveho modulu
		- ten by mel fungovat jako rozhrani - v kazem loaderu bude jedna instance





mergeCallback
- presunout do mergetools
- nutno udelat module loadingStatusChange asi
- parametrizovat: 
	- object vector

- loadingStatusChange
	- prejmenovat a predelat do modulu




- smazat tu cas s tilevector source